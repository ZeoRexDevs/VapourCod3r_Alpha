name: VapourCod3r Alpha

run-name: "VapourCod3r for ${{ inputs.AnimeName }} ${{ inputs.EpLabel }} with Q${{ inputs.QScale }}/CPU${{ inputs.EncSpeed }}"

on:
  workflow_dispatch:
    inputs:
      AnimeName:
        description: "AnimeName"
        required: true
        type: choice
        options:
        - "Oshi.no.Ko"
      EpLabel:
        description: "EpLabel, S0[0-9]E[0-9][0-9]"
        required: true
        type: string
        default: "S01E01"
      EncSpeed:
        description: "EncSpeed"
        required: true
        type: choice
        options:
        - "2"
        - "3"
        - "4"
      QScale:
        description: "QScale, 13~43"
        required: true
        type: number
      VidRes:
        description: "VidRes, 576p || 1024x576"  # AR = 16/9
        required: true
        type: string
        default: "576p"
      ForceRecode:
        description: "ForceRecode Previous Chunks"
        required: true
        type: boolean
        default: false
      MergeOnly:
        description: "Only Merge Previously Encoded File"
        required: false
        type: boolean
        default: false

env:
  AnimeName: ${{ github.event.inputs.AnimeName }}
  EpLabel: ${{ github.event.inputs.EpLabel }}
  EncSpeed: ${{ github.event.inputs.EncSpeed }}
  QScale: ${{ github.event.inputs.QScale }}
  VidRes: ${{ github.event.inputs.VidRes }}
  ForceRecode: ${{ github.event.inputs.ForceRecode }}
  MergeOnly: ${{ github.event.inputs.MergeOnly }}
  VapourCod3r_Hash: ${{ secrets.VapourCod3r_ZHash }}
  RCLONE_CONFIG_HASH: ${{ secrets.RCLONE_CONFIG_HASH }}

jobs:
  generator:
    name: "Matrix Preparation"
    if: github.event.inputs.MergeOnly != 'true'
    runs-on: ubuntu-22.04

    outputs:
      VidResW: ${{ steps.set-params.outputs.VidResW }}
      VidResH: ${{ steps.set-params.outputs.VidResH }}
      matrix: ${{ steps.set-params.outputs.matrix }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Create EncMatrix
        id: set-params
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCod3r_Hash}/" | grep "/matrixGen\.sh" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          # Generate Workflow Matrix
          curl -sL "https://gist.github.com/rokibhasansagar/${VapourCod3r_Hash}/raw/${latestRevision}/matrixGen.sh" -O
          source ./matrixGen.sh
          eval 'set -o history' 2>/dev/null
      - name: Upload Full Source Media as Artifact
        uses: actions/upload-artifact@v3
        if: env.ArtifactNum == '1'
        continue-on-error: true
        with:
          path: ~/data/${{env.AnimeName}}.${{env.EpLabel}}.SOURCE.mkv
          retention-days: 1
      - name: Upload Source Media Split 1 out of 2/3/4 as Artifact
        uses: actions/upload-artifact@v3
        if: ( env.ArtifactNum == '2' || env.ArtifactNum == '3' || env.ArtifactNum == '4' )
        with:
          path: ~/data/${{env.AnimeName}}.${{env.EpLabel}}.SOURCE.mkv.00
          retention-days: 1
      - name: Upload Source Media Split 2 out of 2/3/4 as Artifact
        uses: actions/upload-artifact@v3
        if: ( env.ArtifactNum == '2' || env.ArtifactNum == '3' || env.ArtifactNum == '4')
        with:
          path: ~/data/${{env.AnimeName}}.${{env.EpLabel}}.SOURCE.mkv.01
          retention-days: 1
      - name: Upload Source Media Split 3 out of 3/4 as Artifact
        uses: actions/upload-artifact@v3
        if: ( env.ArtifactNum == '3' || env.ArtifactNum == '4' )
        with:
          path: ~/data/${{env.AnimeName}}.${{env.EpLabel}}.SOURCE.mkv.02
          retention-days: 1
      - name: Upload Source Media Split 4 out of 4 as Artifact
        uses: actions/upload-artifact@v3
        if: env.ArtifactNum == '4'
        with:
          path: ~/data/${{env.AnimeName}}.${{env.EpLabel}}.SOURCE.mkv.02
          retention-days: 1

  synthesizer:
    name: "Vapour Synthesizer"
    if: github.event.inputs.MergeOnly != 'true'
    runs-on: ubuntu-22.04
    needs: generator

    strategy:
      fail-fast: false
      max-parallel: 16
      matrix:
        ChunkID: ${{fromJson(needs.generator.outputs.matrix)}}
    env:
      ChunkID: ${{ matrix.ChunkID }}
      VidResW: ${{ needs.generator.outputs.VidResW }}
      VidResH: ${{ needs.generator.outputs.VidResH }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Download Source Media from Artifact
        uses: actions/download-artifact@v3
        with:
          path: ~/data/
      - name: VapourCod3r - Chunk ${{env.ChunkID}} from ${{env.AnimeName}} ${{env.EpLabel}}
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCod3r_Hash}/" | grep "/vapourGen\.sh" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          # All-in-one Script for VapourCod3r vapourGen
          curl -sL "https://gist.github.com/rokibhasansagar/${VapourCod3r_Hash}/raw/${latestRevision}/vapourGen.sh" -O
          source ./vapourGen.sh
          eval 'set -o history' 2>/dev/null
      - name: VapourCod3r Av1an Error Debugger
        if: failure()
        run: |
          if [[ -s ~/data/enclog.log ]]; then
            tar -I'zstd --ultra -22 -T2' -cf ${ChunkID}.enclog.tzst
            DebugLog=$(curl -s --upload-file ${ChunkID}.enclog.tzst https://transfer.sh/ 2>/dev/null)
            echo -e "See the Failed Encode Log at ${DebugLog}"
          else
            echo -e "The Job broke down before Encode had started"
            exit 1
          fi

  merger:
    name: "Synthesized Video Joiner"
    if: ( github.event.inputs.MergeOnly == 'true' && !cancelled() ) || success()
    runs-on: ubuntu-22.04
    needs: [generator, synthesizer]

    env:
      VidResW: ${{ needs.generator.outputs.VidResW }}
      VidResH: ${{ needs.generator.outputs.VidResH }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'main'
      - name: GitHub Auth
        uses: rokibhasansagar/custom_workflows/git_config@main
        env:
          PAT: ${{ secrets.GH_TOKEN }}
      - name: Joiner for VapourCod3d ${{env.AnimeName}} ${{env.EpLabel}}
        run: |
          eval 'set -eo pipefail' 2>/dev/null
          eval 'set +o history' 2>/dev/null
          # Get GIST latest Revision number
          export latestRevision=$(curl -sL "https://gist.github.com/rokibhasansagar/${VapourCod3r_Hash}/" | grep "/xJoiner\.sh" | awk -F'/raw/' '{print $2}' | awk -F'/' '{print $1}')
          # All-in-one Script for VapourCod3r xJoiner
          curl -sL "https://gist.github.com/rokibhasansagar/${VapourCod3r_Hash}/raw/${latestRevision}/xJoiner.sh" -O
          source ./xJoiner.sh
          eval 'set -o history' 2>/dev/null
